<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: command-line | teohm.dev]]></title>
  <link href="http://teohm.github.com/blog/categories/command-line/atom.xml" rel="self"/>
  <link href="http://teohm.github.com/"/>
  <updated>2012-09-05T03:25:45+08:00</updated>
  <id>http://teohm.github.com/</id>
  <author>
    <name><![CDATA[Huiming Teo (teohm)]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using sshuttle in daily work]]></title>
    <link href="http://teohm.github.com/blog/2012/04/01/using-sshuttle-in-daily-work/"/>
    <updated>2012-04-01T13:13:00+08:00</updated>
    <id>http://teohm.github.com/blog/2012/04/01/using-sshuttle-in-daily-work</id>
    <content type="html"><![CDATA[<p>I was first introduced to <a href="https://github.com/apenwarr/sshuttle"><strong>sshuttle</strong></a> by Sooyoung (<a href="https://twitter.com/#!/5ooyoung">@5ooyoung</a>) in <a href="http://favoritemedium.com/">Favorite Medium</a>
as a workaround to The Great Firewall in China.</p>

<p>Since then, it has become my <strong>light-weight network tunneling tool</strong> in daily work.</p>

<h2>Install sshuttle</h2>

<p>The installation is easy now. You can install it through Mac OSX Homebrew, or <a href="http://packages.ubuntu.com/precise/sshuttle">Ubuntu apt-get</a>.</p>

<p><code>bash
brew install sshuttle
</code></p>

<h2>I use sshuttle to..</h2>

<h3>1. Tunnel all traffic</h3>

<p>This is the first command I learned.
It <strong>forwards all TCP traffic and DNS requests to a remote SSH server</strong>.</p>

<p><code>bash
sshuttle --dns -vr ssh_server 0/0
</code>
Just like <code>ssh</code>, you can use any server specified in <code>~/.ssh/config</code>.
The <code>-v</code> flag means verbose mode.</p>

<p>Besides TCP and DNS, currently <code>sshuttle</code> <strong>does not forward other requests
<em>such as</em> UDP, ICMP ping etc</strong>.</p>

<h3>2. Tunnel all traffic, but exclude some</h3>

<p>You can <strong>exclude certain TCP traffic using <code>-x</code> option</strong>.</p>

<p><code>bash
sshuttle --dns -vr ssh_server -x 121.9.204.0/24 -x 61.135.196.21 0/0
</code></p>

<p>For instance, when I am in China, I don't want to tunnel
<a href="http://youku.com">Youku.com</a> traffic to a foreign server,
because its movie streaming service is only available within China.</p>

<p>In this case, I use <code>-x</code> option to exclude Youku.com IP addresses.</p>

<h3>3. Tunnel only certain traffic</h3>

<p>To tunnel only certain TCP traffic, <strong>specify the IP addresses
or <a href="http://www.subnet-calculator.com/cidr.php">IP ranges</a> that need tunneling</strong>.</p>

<p><code>bash
sshuttle -vr ssh_server 121.9.204.0/24 61.135.196.21
</code></p>

<p>This command comes in handy, whenever I need to test an app feature (e.g. Netflix movie streaming)
which only available in certain countries, or to bypass ISP faulty caches.</p>

<h3>4. VPN to office network</h3>

<p>I seldom do VPN, but all you need is <strong>the remote SSH server with <code>-NH</code> flags turned on</strong>.</p>

<p><code>bash
sshuttle -NHvr office_ssh_server
</code></p>

<p><code>-N</code> flag tells sshuttle to figure out by itself the IP subnets to forward,
and <code>-H</code> flag to scan for hostnames within remote subnets and store them temporarily in <code>/etc/hosts</code>.</p>

<h2>IP addresses.. troublesome?</h2>

<p>Well, I try not to deal with IP addresses manually. So I wrote a few
<strong><a href="https://github.com/teohm/dotfiles/blob/master/.bashrc.d/sshuttle_helpers">sshuttle helpers</a>
(<code>tnl</code>, <code>tnlbut</code>, <code>tnlonly</code>, <code>vpnto</code>)</strong> that allow me to <strong>use domain names instead of IP addresses</strong>:</p>

<h3>Tunnel all traffic</h3>

<p><code>bash
tnl
</code></p>

<h3>Tunnel all traffic, but exclude some</h3>

<p><code>bash
tnlbut youku.com weibo.com
</code></p>

<h3>Tunnel only certain traffic</h3>

<p><code>bash
tnlonly netflix.com movies.netflix.com
</code></p>

<h3>VPN to office network</h3>

<p><code>bash
vpnto office_ssh_server
</code></p>

<p>The script is available on <a href="https://github.com/teohm/dotfiles/blob/master/.bashrc.d/sshuttle_helpers">my GitHub repo</a>.
You can load it into your <code>~/.bashrc</code>. <strong>To override the default tunneling SSH server</strong> in the script:
<code>
TNL_SERVER=user@another_server tnl
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Working effectively with iTerm2]]></title>
    <link href="http://teohm.github.com/blog/2012/03/22/working-effectively-with-iterm2/"/>
    <updated>2012-03-22T22:42:00+08:00</updated>
    <id>http://teohm.github.com/blog/2012/03/22/working-effectively-with-iterm2</id>
    <content type="html"><![CDATA[<p>I have been using <a href="http://www.iterm2.com">iTerm</a> in <a href="http://www.favoritemedium.com">daily work</a> for almost a year now.
Along the way, I learned a few handy <strong>settings tweaks and shortcut keys to boost my productivity</strong> in command-line environment.</p>

<h2>Install iTerm2</h2>

<p>If you haven't heard of <a href="http://www.iterm2.com">iTerm</a>, it's a popular <strong>open source alternative to Mac OS X Terminal</strong>.
Give it a try, download and install it from <a href="http://www.iterm2.com">http://www.iterm2.com</a>.</p>

<h2>Fine-Tune Settings</h2>

<p>Launch iTerm, open <strong>iTerm > Preferences</strong> or just <code>Cmd + ,</code>.</p>

<h3>Open tab/pane with current working directory</h3>

<p>Under <strong>Profiles</strong> tab, go to <strong>General</strong> subtab, set <strong>Working Directory</strong> to <em>"Reuse previous session's directory"</em>.</p>

<h3>Enable <code>Meta</code> key</h3>

<p>To enable Meta key for <a href="/blog/2012/01/04/shortcuts-to-move-faster-in-bash-command-line">Bash readline editing</a> e.g. <code>Alt + b</code> to move to previous word, under <strong>Profiles</strong> tab, go to <strong>Keys</strong> subtab, set <strong>Left option key acts as:</strong> to <em>"+Esc"</em>.</p>

<h3>Hotkey to toggle iTerm2</h3>

<p>Under <strong>Keys</strong> tab, in <strong>Hotkey</strong> section, enable <em>"Show/hide iTerm2 with  a system-wide hotkey"</em> and input your hotkey combination, e.g. I use <code>Ctrl + Shift + L</code>.</p>

<h3>Switch pane with mouse cursor</h3>

<p>Under <strong>Pointer</strong>, in <strong>Miscellaneous Settings</strong> section, enable <em>"Focus follows mouse"</em>.</p>

<h2>Handy Shortcut Keys</h2>

<p>Here's a set of <strong>shortcut keys I commonly use</strong>. You can always look for other shortcut keys in the iTerm menu.</p>

<h3>Tab navigation</h3>

<ul>
<li>open new tab <code>Cmd + t</code></li>
<li>next tab <code>Cmd + Shift + ]</code></li>
<li>previous tab <code>Cmd + Shift + [</code></li>
</ul>


<h3>Pane navigation</h3>

<ul>
<li>split pane left-right <code>Cmd + d</code></li>
<li>split pane top-bottom <code>Cmd + Shift + d</code></li>
<li>next pane <code>Cmd + ]</code></li>
<li>previous pane <code>Cmd + [</code></li>
</ul>


<h3>Search</h3>

<ul>
<li>open search bar <code>Cmd + f</code></li>
<li>find next <code>Cmd + g</code></li>
</ul>


<h3>Input to all panes</h3>

<ul>
<li>input to all panes in current tab <code>Cmd + Alt + i</code></li>
</ul>


<h3>Clear screen</h3>

<ul>
<li>clear buffer <code>Cmd + k</code></li>
<li>clear lines (Bash command) <code>Ctrl + l</code></li>
</ul>


<h3>Zooming / Font Resize</h3>

<ul>
<li>toggle maximize window <code>Cmd + Alt + =</code></li>
<li>toggle full screen <code>Cmd + Enter</code></li>
<li>make font larger <code>Cmd + +</code></li>
<li>make font smaller <code>Cmd + -</code></li>
</ul>


<p>iTerm lovers, did I miss anything out?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Shortcuts to move faster in Bash command line]]></title>
    <link href="http://teohm.github.com/blog/2012/01/04/shortcuts-to-move-faster-in-bash-command-line/"/>
    <updated>2012-01-04T20:13:00+08:00</updated>
    <id>http://teohm.github.com/blog/2012/01/04/shortcuts-to-move-faster-in-bash-command-line</id>
    <content type="html"><![CDATA[<p>Nowadays, I spend more time in Bash shell, typing longer commands. One of my new year resolutions for this year
is to <strong>stop using left/right arrow keys to move around in the command line</strong>.
I learned <a href="http://pivotallabs.com/users/hunter/blog/articles/1925-terminal-beyond-ctrl-a-and-ctrl-e">a few shortcuts</a>
a while ago.</p>

<p>Last night, I spent some time to read about <strong>"Command Line Editing" in <a href="http://www.gnu.org/software/bash/manual/bashref.html#Command-Line-Editing">the bash manual</a></strong>.
The bash manual is a well-written piece of documentation. I think I should read it more often.</p>

<p>Well, here's the new shortcuts I learned:</p>

<h2>Basic moves</h2>

<ul>
<li>Move back one character. <code>Ctrl</code> + <code>b</code></li>
<li>Move forward one character. <code>Ctrl</code> + <code>f</code></li>
<li>Delete current character. <code>Ctrl</code> + <code>d</code></li>
<li>Delete previous character. <code>Backspace</code></li>
<li>Undo. <code>Ctrl</code> + <code>-</code></li>
</ul>


<h2>Moving faster</h2>

<ul>
<li>Move to the start of line. <code>Ctrl</code> + <code>a</code></li>
<li>Move to the end of line. <code>Ctrl</code> + <code>e</code></li>
<li>Move forward a word. <code>Meta</code> + <code>f</code> <em>(a word contains alphabets and digits, no symbols)</em></li>
<li>Move backward a word. <code>Meta</code> + <code>b</code></li>
<li>Clear the screen. <code>Ctrl</code> + <code>l</code></li>
</ul>


<p><strong>What is Meta?</strong> <code>Meta</code> is your <code>Alt</code> key, normally. For <strong>Mac OSX user, you need to
enable it yourself</strong>. Open <em>Terminal > Preferences > Settings > Keyboard</em>,
and enable <em>Use option as meta key</em>. <code>Meta</code> key, by convention, is used for operations on word.</p>

<h2>Cut and paste ('Kill and yank' for old schoolers)</h2>

<ul>
<li>Cut from cursor to the end of line. <code>Ctrl</code> + <code>k</code></li>
<li>Cut from cursor to the end of word. <code>Meta</code> + <code>d</code></li>
<li>Cut from cursor to the start of word. <code>Meta</code> + <code>Backspace</code></li>
<li>Cut from cursor to previous whitespace. <code>Ctrl</code> + <code>w</code></li>
<li>Paste the last cut text. <code>Ctrl</code> + <code>y</code></li>
<li>Loop through and paste previously cut text. <code>Meta</code> + <code>y</code> (use it after <code>Ctrl</code> + <code>y</code>)</li>
<li>Loop through and paste the last argument of previous commands. <code>Meta</code> + <code>.</code></li>
</ul>


<h2>Search the command history</h2>

<ul>
<li>Search as you type. <code>Ctrl</code> + <code>r</code> and type the search term; Repeat <code>Ctrl</code> + <code>r</code> to loop through results.</li>
<li>Search the last remembered search term. <code>Ctrl</code> + <code>r</code> twice.</li>
<li>End the search at current history entry. <code>Ctrl</code> + <code>j</code></li>
<li>Cancel the search and restore original line. <code>Ctrl</code> + <code>g</code></li>
</ul>

]]></content>
  </entry>
  
</feed>
